package net.opentrends.training.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Manager service. Represents a row in the &quot;sample_Manager&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link net.opentrends.training.model.impl.ManagerModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link net.opentrends.training.model.impl.ManagerImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Manager
 * @see net.opentrends.training.model.impl.ManagerImpl
 * @see net.opentrends.training.model.impl.ManagerModelImpl
 * @generated
 */
public interface ManagerModel extends BaseModel<Manager> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a manager model instance should use the {@link Manager} interface instead.
     */

    /**
     * Returns the primary key of this manager.
     *
     * @return the primary key of this manager
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this manager.
     *
     * @param primaryKey the primary key of this manager
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the manageentry i d of this manager.
     *
     * @return the manageentry i d of this manager
     */
    public long getManageentryID();

    /**
     * Sets the manageentry i d of this manager.
     *
     * @param manageentryID the manageentry i d of this manager
     */
    public void setManageentryID(long manageentryID);

    /**
     * Returns the group ID of this manager.
     *
     * @return the group ID of this manager
     */
    public long getGroupId();

    /**
     * Sets the group ID of this manager.
     *
     * @param groupId the group ID of this manager
     */
    public void setGroupId(long groupId);

    /**
     * Returns the company ID of this manager.
     *
     * @return the company ID of this manager
     */
    public long getCompanyId();

    /**
     * Sets the company ID of this manager.
     *
     * @param companyId the company ID of this manager
     */
    public void setCompanyId(long companyId);

    /**
     * Returns the user ID of this manager.
     *
     * @return the user ID of this manager
     */
    public long getUserId();

    /**
     * Sets the user ID of this manager.
     *
     * @param userId the user ID of this manager
     */
    public void setUserId(long userId);

    /**
     * Returns the user uuid of this manager.
     *
     * @return the user uuid of this manager
     * @throws SystemException if a system exception occurred
     */
    public String getUserUuid() throws SystemException;

    /**
     * Sets the user uuid of this manager.
     *
     * @param userUuid the user uuid of this manager
     */
    public void setUserUuid(String userUuid);

    /**
     * Returns the last modified date of this manager.
     *
     * @return the last modified date of this manager
     */
    public Date getLastModifiedDate();

    /**
     * Sets the last modified date of this manager.
     *
     * @param lastModifiedDate the last modified date of this manager
     */
    public void setLastModifiedDate(Date lastModifiedDate);

    /**
     * Returns the manager i d of this manager.
     *
     * @return the manager i d of this manager
     */
    @AutoEscape
    public String getManagerID();

    /**
     * Sets the manager i d of this manager.
     *
     * @param managerID the manager i d of this manager
     */
    public void setManagerID(String managerID);

    /**
     * Returns the manager name of this manager.
     *
     * @return the manager name of this manager
     */
    @AutoEscape
    public String getManagerName();

    /**
     * Sets the manager name of this manager.
     *
     * @param managerName the manager name of this manager
     */
    public void setManagerName(String managerName);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(net.opentrends.training.model.Manager manager);

    @Override
    public int hashCode();

    @Override
    public CacheModel<net.opentrends.training.model.Manager> toCacheModel();

    @Override
    public net.opentrends.training.model.Manager toEscapedModel();

    @Override
    public net.opentrends.training.model.Manager toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
